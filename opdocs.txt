OPCODE FORMATS

instruction format:	<opcode> <mode> <a>? <b>? <c>? 	
	MODE:
	0 = <null>
	1 = a(reg)
	2 = a(reg), b(f64)
	3 = a(reg), b(reg)
	4 = a(reg), [b(reg) + c(u64)]
	5 = [a(reg) + b(u64)], c(f64)
	6 = [a(reg) + b(u64)], c(reg)
	7 = a(u64)
	8 = [a(reg) + b(u64)]

OPCODE	NAME	VALID MODES 
00		NULL	0
01		RET		0

20		MOV		2 3 4 5 6
21		ADD		2 3 4 5 6
22		SUB		2 3 4 5 6
23		MUL		2 3 4 5 6
24		DIV		2 3 4 5 6
25		NEG		1 8	
26		OR		2 3 4 5 6
27		AND 	2 3 4 5 6
28		XOR		2 3 4 5 6
29		NOT		1 8	
2A		SHL		2 3 4 5 6
2B		SHR		2 3 4 5 6
2C		LT		2 3 4 5 6
2D		LE		2 3 4 5 6
2E		GT		2 3 4 5 6
2F		GE		2 3 4 5 6
30		CMP		2 3 4 5 6
31		LAND	2 3 4 5 6
32		LOR		2 3 4 5 6
33		LNOT	2 3 4 5 6


40		PUSH	1
41		POP 	0 1

60		CALL	7	
61		JMP		7
62		JIT		7
63		JIF		7


---------- CALLING CONVENTION ----------

Arguments should be passed to a function in the following
registers respectively:
	RDX
	REX
	RFX
	RGX
	RHX
	RIX

Registers that should be the same after a function call:
	RBP
	RSP
	RBX
	RCX

Return value is returned in:
	RAX
	



